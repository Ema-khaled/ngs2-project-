Create the conda env if you have not already did
conda create -y --name project python=3.6
conda activate ngs1 
mkdir -p ~/NGS2_Project/first_sample_data && cd ~/NGS2_Project/first_sample_data

Downloading data
#coudnt dowenlode our samples using that link  https://trace.ncbi.nlm.nih.gov/Traces/sra/sra.cgi?study=SRP170630 
then from sra as sra format and then convert it to fastq 

#to  dowenlode sra samples  then convert it to fastaq (paired) 
 conda install -c bioconda sra-tools 
 prefetch SRR8241115  
 fastq-dump SRR8241115
# apear just one fastaq file  
# search on Biostar for that issue resulting after several terying to use thi code  using that link  https://www.biostars.org/p/376434/
 
fastq-dump --split-files SRR8241115  
 fastq-dump --split-3 SRR8241115 
# so i downlode the samples again from  sra data acess with 2 links 
# and convert it also to fastaq using fastq-dump  
..................
cat myfile
sed 's/test/another test/' myfile 


#download sample
#wget https://www.ncbi.nlm.nih.gov//biosample/SAMN10474016/101228_I433_FC812MDABXX_L8_HUMrmoXDTABAPEI-1_1.clean.fq.gz
#wget https://sra-download.st-va.ncbi.nlm.nih.gov/sos2/sra-pub-run-3/SRR8241115/SRR8241115.1

#download reference
#wget https://www.ncbi.nlm.nih.gov/assembly/37871
#downloade (whole  exome reference)  
 wget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/cds/Homo_sapiens.GRCh38.cds.all.fa.gz 
 gunzip Homo_sapiens.GRCh38.cds.all.fa.gz
 
 ........................................................
 mkdir -p ~/NGS2_Project/blast_align/blastIndex && cd ~/NGS2_Project/blast_align/blastIndex
 ln -s ~/NGS2_Project/first_sample_data/Homo_sapiens.GRCh38.cds.all.fa .
  ...............................................................................
   explore sample 
   head SRR8241115_1.fastq 
@SRR8241115.1.1 B812MDABXX:8:1:3839:183285 length=90
TTTTTTATGGAAGGGGTGCGGACACATCTCCAATATCCAATTTTATAATGTTTCATTAAGAAAATAGGATTTTCGTGACAGGGTTTAAAC
+SRR8241115.1.1 B812MDABXX:8:1:3839:183285 length=90
FFFFFFFFFEFFFFFF*D:BACDDCFDFECFFE;BDFEAFBFFFEEBFFE?FF0:>A7A?AF;ED@*AA,>7<7;;;>B###########
@SRR8241115.2.1 B812MDABXX:8:1:3921:183304 length=90  


(ngs1) ngs@bioinfo_nu:~/NGS2_Project/first_sample_data$ head SRR8241115_2.fastq 
@SRR8241115.1.2 B812MDABXX:8:1:3839:183285 length=90
CCTAGCACAGTGGCATTCTATACAAAATACTGTACTCCCTCATCAGGTGAATACAGTCTCCCTTAATCCTGAAGCTGATGCAATTGTGTG
+SRR8241115.1.2 B812MDABXX:8:1:3839:183285 length=90
HHHHHHFHHHCHHHHHHHHGHGHEFGDGDFHCDHHHHHFHHHHHBEE@EEGEBDGHFHHFHHGHHHEBHHFEF6BA;5=DD?DDF@2A.D
@SRR8241115.2.2 B812MDABXX:8:1:3921:183304 length=90


   
   
   
   .................................................................................
  mkdir -p ~/NGS2_Project/GATK_tutorial && cd ~/NGS2_Project/GATK_tutorial
for R1 in ~/NGS2_Project/first_sample_data/*_R1.fastq ;do
    SM= Proband II-1                                                              ##sample ID
    LB= HUMrmoXDTABAPEI-1                                                         ##library ID
    PL="Illumina"                                                               ##platform (e.g. illumina, solid)
    RGID=$(cat $R1 | head -n1 | sed 's/:/_/g' |cut -d "_" -f1,2,3,4)           ##read group identifier 
    PU=$RGID.$LB                                                                ##Platform Unit
    echo -e "@RG\tID:$RGID\tSM:$SM\tPL:$PL\tLB:$LB\tPU:$PU"

    R2=$(echo $R1 | sed 's/_R1./_R2./')
    echo $R1 $R2
    index="$~/NGS2_Project/bwa_align/bwaIndex/Homo_sapiens.GRCh38.cds.all.fa"
    bwa mem -t 4 -M -R "@RG\tID:$RGID\tSM:$SM\tPL:$PL\tLB:$LB\tPU:$PU" $index $R1 $R2 > 101228_I433_FC812MDABXX_HUMrmoXDTABAPEI.sam
    not working 
    
    .............................................
    R1="$HOME/NGS2_Project/first_sample_data/SRR8241116.1_1.fixed.fastq"
    R2="$HOME/NGS2_Project/first_sample_data/SRR8241116.1_2.fixed.fastq"
    index="$HOME/NGS2_Project/bwa_align/bwaIndex/Homo_sapiens.GRCh38.cds.all.fa"
    SM="Proband II-1"
    LB="HUMrmoXDTABAPEI-1"
    PL="Illumina"
    RGID="FC812MDABXX"
    PU=$RGID.$LB
     bwa mem -t 4 -M -R "@RG\tID:$RGID\tSM:$SM\tPL:$PL\tLB:$LB\tPU:$PU" $index $R1 $R2 > 101228_I433_FC812MDABXX_HUMrmoXDTABAPEI.sam
     this code is working 
     ............................................................
     for samfile in *.sam;do
  sample=${samfile%.sam}
  samtools view -hbo $sample.bam $samfile
  samtools sort $sample.bam -o $sample.sorted.bam
done
...........................................................
# Install Picard tools
conda install -c bioconda picard 
picard_path=$CONDA_PREFIX/share/picard-* ## 2.21.7-0


# merge the replicates
java  -Xmx2g -jar $picard_path/picard.jar MergeSamFiles I=BD143_TGACCA_L005.sorted.bam I=BD143_TGACCA_L006.sorted.bam OUTPUT=BD143_TGACCA_merged.sorted.bam

# check for the changes in the header
samtools view -H BD143_TGACCA_L005.sorted.bam
samtools view -H BD143_TGACCA_L006.sorted.bam
samtools view -H BD143_TGACCA_merged.sorted.bam

# remove the individual replicates
rm BD143_TGACCA_L00*.sorted.bam 
 didnt use it 
 ......................................................
 for bamFile in *.sorted.bam;do
  output=${bamFile%.sorted.bam}
  samtools depth $bamFile | awk '{{sum+=$3}} END {{print "Average = ",sum/NR, "No of covered Nuc = ", NR}}' > $output.cov
  samtools flagstat $bamFile > $output.stat
done
#work 
.................................................

#Mark duplicate
for sample in *.sorted.bam;do
  name=${sample%.sorted.bam}
  java  -Xmx2g -jar $picard_path/picard.jar MarkDuplicates INPUT=$sample OUTPUT=$name.dedup.bam METRICS_FILE=$name.metrics.txt;
done 
#work
.................................................................
#Install GATK
conda install -c bioconda gatk4 
indexing
# samples
for sample in *.dedup.bam;do
  #name=${sample%.dedup.bam}
  java -Xmx2g -jar $picard_path/picard.jar BuildBamIndex VALIDATION_STRINGENCY=LENIENT INPUT=$sample
done 
#work 
....................................................... 
wget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_rm.chromosome.12.fa.gz 
gunzip ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_rm.chromosome.12.fa.gz 
,,,,,,,,,,,,,,,,,,,,,,,,,,,
wget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_rm.chromosome.20.fa.gz  
gun zip ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_rm.chromosome.20.fa.gz
ln -s ~/NGS2_Project/first_sample_data/Homo_sapiens.GRCh38.dna_rm.chromosome.20.fa
bwaIndex$ bwa index -a bwtsw Homo_sapiens.GRCh38.dna_rm.chromosome.20.fa

.............
R1="$HOME/NGS2_Project/first_sample_data/SRR8241116.1_1.fixed.fastq"
    R2="$HOME/NGS2_Project/first_sample_data/SRR8241116.1_2.fixed.fastq"
    index="$HOME/NGS2_Project/bwa_align/bwaIndex/Homo_sapiens.GRCh38.dna_rm.chromosome.20.fa"
    SM="Proband II-1"
    LB="HUMrmoXDTABAPEI-1"
    PL="Illumina"
    RGID="FC812MDABXX"
    PU=$RGID.$LB
     bwa mem -t 4 -M -R "@RG\tID:$RGID\tSM:$SM\tPL:$PL\tLB:$LB\tPU:$PU" $index $R1 $R2 > 1FC812MDABXX_HUMrmoXDTABAPEI.sam 
     the diffrent paired read 
     ..................
     conda install -c bioconda fastq-pair
     fastq_pair SRR8241115_1.fastq SRR8241115_2.fastq

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
1-Create the conda env if you have not already did
conda create -y --name project python=3.6
conda activate ngs1 
mkdir -p ~/NGS2_Project/first_sample_data && cd ~/NGS2_Project/first_sample_data
without trubleshooting  
 ......................
2- #to  dowenlode sra samples  then convert it to fastaq (paired) 
 conda install -c bioconda sra-tools 
 prefetch SRR8241115 
 fastq-dump --split-3 SRR8241115 
 .................................................
3- dowenload the refrence genom (selecting chromosome 20) 
wget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_rm.chromosome.20.fa.gz  
gun zip ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_rm.chromosome.20.fa.gz
......................................
4-indexing the refrence 
ln -s ~/NGS2_Project/first_sample_data/Homo_sapiens.GRCh38.dna_rm.chromosome.20.fa
bwaIndex$ bwa index -a bwtsw Homo_sapiens.GRCh38.dna_rm.chromosome.20.fa 
..........................................
5- Add Read group information and align all reads and aligne the sample using bwa

    R1="$HOME/NGS2_Project/first_sample_data/SRR8241115_1.fastq"
    R2="$HOME/NGS2_Project/first_sample_data/SRR8241115_2.fastq"
    index="$HOME/NGS2_Project/bwa_align/bwaIndex/Homo_sapiens.GRCh38.dna_rm.chromosome.20.fa"
    SM="Proband II-1"
    LB="HUMrmoXDTABAPEI-1"
    PL="Illumina"
    RGID="FC812MDABXX"
    PU=$RGID.$LB
     bwa mem -t 4 -M -R "@RG\tID:$RGID\tSM:$SM\tPL:$PL\tLB:$LB\tPU:$PU" $index $R1 $R2 > 1FC812MDABXX_HUMrmoXDTABAPE,sam 
     
     explor sam file 
     (ngs1) root@bioinfo_nu:~/NGS2_Project/first_sample_data# head 1FC812MDABXX_HUMrmoXDTABAPEI.sam
@SQ     SN:20   LN:64444167
@RG     ID:FC812MDABXX  SM:Proband II-1 PL:Illumina     LB:HUMrmoXDTABAPEI-1    PU:FC812MDABXX.HUMrmoXDTABAPEI-1
@PG     ID:bwa  PN:bwa  VN:0.7.17-r1188 CL:bwa mem -t 4 -M -R @RG\tID:FC812MDABXX\tSM:Proband II-1\tPL:Illumina\tLB:HUMrmoXDTABAPEI-1\tPU:FC812MDABXX.HUMrmoXDTABAPEI-1 /home/ngs/NGS2_Project/bwa_align/bwaIndex/Homo_sapiens.GRCh38.dna_rm.chromosome.20.fa /home/ngs/NGS2_Project/first_sample_data/SRR8241115_1.fastq /home/ngs/NGS2_Project/first_sample_data/SRR8241115_2.fastq
SRR8241115.1    77      *       0       0       *       *       0       0       TTTTTTATGGAAGGGGTGCGGACACATCTCCAATATCCAATTTTATAATGTTTCATTAAGAAAATAGGATTTTCGTGACAGGGTTTAAAC   FFFFFFFFFEFFFFFF*D:BACDDCFDFECFFE;BDFEAFBFFFEEBFFE?FF0:>A7A?AF;ED@*AA,>7<7;;;>B###########  AS:i:0   XS:i:0  RG:Z:FC812MDABXX
SRR8241115.1    141     *       0       0       *       *       0       0       CCTAGCACAGTGGCATTCTATACAAAATACTGTACTCCCTCATCAGGTGAATACAGTCTCCCTTAATCCTGAAGCTGATGCAATTGTGTG   HHHHHHFHHHCHHHHHHHHGHGHEFGDGDFHCDHHHHHFHHHHHBEE@EEGEBDGHFHHFHHGHHHEBHHFEF6BA;5=DD?DDF@2A.D  AS:i:0   XS:i:0  RG:Z:FC812MDABXX
SRR8241115.2    77      *       0       0       *       *       0       0       GTAGTCGTGACTGAATAAAGAAAGCAAAAGCCTGTCTCTGCCTCCTCCATAGGGGTTTTGATGAGGGCGACGGCTGCATTTAGGGAGGAG   HGHGHHFEHHHHFGDGGHEEHGHHHHHGCFCFE/DCDDCEHEBAEECF=F@ECE=>DAB9:>:5=AB(D<AB?@;D=AAB##########  A
................................................................
6 -#generate & sort BAM file 

 for samfile in *.sam;do
  sample=${samfile%.sam}
  samtools view -hbo $sample.bam $samfile
  samtools sort $sample.bam -o $sample.sorted.bam
done

...............................................
7-
#mapping QC
for bamFile in *.sorted.bam;do
  output=${bamFile%.sorted.bam}
  samtools depth $bamFile | awk '{{sum+=$3}} END {{print "Average = ",sum/NR, "No of covered Nuc = ", NR}}' > $output.cov
  samtools flagstat $bamFile > $output.stat
done 
#depth of not sorted bam
samtools depth 1FC812MDABXX_HUMrmoXDTABAPEI.bam | head[E::bam_plp_push] The input is not sorted (reads out of order)
20      30494937        1
20      30494938        1
20      30494939        1
20      30494940        1
20      30494941        1

#depth of sorted bam file 
 samtools depth 1FC812MDABXX_HUMrmoXDTABAPEI.sorted.bam | head
20      60000   1
20      60001   21
20      60002   21
20      60003   21
20      60004   21

#result of stat file 
52764413 + 0 in total (QC-passed reads + QC-failed reads)
4201 + 0 secondary
0 + 0 supplementary
0 + 0 duplicates
2067531 + 0 mapped (3.92% : N/A)
52760212 + 0 paired in sequencing
26380106 + 0 read1
26380106 + 0 read2
1814790 + 0 properly paired (3.44% : N/A)
1844486 + 0 with itself and mate mapped
218844 + 0 singletons (0.41% : N/A)

.........................................................
8-#Mark duplicate
for sample in *.sorted.bam;do
  name=${sample%.sorted.bam}
  java  -Xmx2g -jar $picard_path/picard.jar MarkDuplicates INPUT=$sample OUTPUT=$name.dedup.bam METRICS_FILE=$name.metrics.txt;
done
.......................................................
9#Install GATK
conda install -c bioconda gatk4 

indexing
a-# samples
for sample in *.dedup.bam;do
  #name=${sample%.dedup.bam}
  java -Xmx2g -jar $picard_path/picard.jar BuildBamIndex VALIDATION_STRINGENCY=LENIENT INPUT=$sample
done 

apt install samtools
apt install default-jre            
apt install openjdk-11-jre-headless
apt install openjdk-8-jre-headless
b -# Reference

ln -s ~//home/ngs/NGS2_Project/bwa_align/bwaIndex/Homo_sapiens.GRCh38.dna_rm.chromosome.20.fa .
java -Xmx2g -jar $picard_path/picard.jar CreateSequenceDictionary R=Homo_sapiens.GRCh38.dna_rm.chromosome.20.fa O=Homo_sapiens.GRCh38.dna_rm.chromosome.20
samtools faidx Homo_sapiens.GRCh38.dna_rm.chromosome.20.fa 


......................
##Download known polymorphic sites
##dowenlod knowen varience on chr 20
wget ftp://ftp.ensembl.org/pub/release-99/variation/vcf/homo_sapiens/homo_sapiens-chr20.vcf.gz
gunzip homo_sapiens-chr20.vcf.gz 
##expolore the chro,var
          => ‘homo_sapiens-chr20.vcf.gz’
Resolving ftp.ensembl.org (ftp.ensembl.org)... 193.62.193.8
Connecting to ftp.ensembl.org (ftp.ensembl.org)|193.62.193.8|:21... connected.
Logging in as anonymous ... Logged in!
==> SYST ... done.    ==> PWD ... done.
==> TYPE I ... done.  ==> CWD (1) /pub/release-99/variation/vcf/homo_sapiens ... done.
==> SIZE homo_sapiens-chr20.vcf.gz ... 185905834
==> PASV ... done.    ==> RETR homo_sapiens-chr20.vcf.gz ... done.
Length: 185905834 (177M) (unauthoritative)

homo_sapiens-chr20.vcf.gz   100%[===========================================>] 177.29M   776KB/s    in 3m 19s  

2020-02-29 21:25:02 (910 KB/s) - ‘homo_sapiens-chr20.vcf.gz’ saved [185905834]
............................................................................................................

# Select variants on chr20 and correct chr name 
grep "^#" homo_sapiens-chr20.vcf > eman_homo_sapiens-chr20.vcf
grep "^5" homo_sapiens-chr20.vcf | sed 's/^5/chr5/' >> eman_homo_sapiens-chr20.vcf
gatk IndexFeatureFile -I eman_homo_sapiens-chr20.vcf 

........................................
Recalibrate Bases BQSR

for sample in *.dedup.bam;do
  name=${sample%.dedup.bam}

  gatk --java-options "-Xmx2G" BaseRecalibrator \
-R Homo_sapiens.GRCh38.dna_rm.chromosome.20.fa -I $sample --known-sites eman_homo_sapiens-chr20.vcf \
-O $name.report

  gatk --java-options "-Xmx2G" ApplyBQSR \
-R Homo_sapiens.GRCh38.dna_rm.chromosome.20.fa -I $sample -bqsr $name.report \
-O $name.bqsr.bam --add-output-sam-program-record --emit-original-quals
done

............................................
##Joint variant calling using HaplotypeCaller
Call germline SNPs and indels via local re-assembly of haplotypes


## assess genotype likelihood per-sample
for sample in *.bqsr.bam;do
  name=${sample%.bqsr.bam}

  gatk --java-options "-Xmx2G" HaplotypeCaller \
  -R dog_chr5.fa -I $sample \
  --emit-ref-confidence GVCF \
  --pcr-indel-model NONE \
  -O $name.gvcf
done
............................................................................

 unfortionately we coudnt met to combine oure samples together to support the varient 
## combine samples

## Joint Genotyping
gatk --java-options "-Xmx60G" GenotypeGVCFs \
-R Homo_sapiens.GRCh38.dna_rm.chromosome.20.fa \
-V raw_variants.gvcf \
--max-alternate-alleles 6 \
-O raw_variants.vcf

## annotated output
gatk --java-options "-Xmx60G" GenotypeGVCFs \
-R Homo_sapiens.GRCh38.dna_rm.chromosome.20.fa \
-V raw_variants.gvcf \
--max-alternate-alleles 6 \
--dbsnp eman_homo_sapiens-chr20.vcf \
-O raw_variants_ann.vcf

## check how many variant got annotated
grep -v "^#" raw_variants_ann.vcf | awk '{print $3}' | grep "^rs" | wc -l





























     
  
  
 
